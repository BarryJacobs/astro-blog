---
import { getCollection, type CollectionEntry } from "astro:content";
import { slugify } from "../../scripts/utils";
import MainLayout from "../../layouts/MainLayout.astro";
import PostCard from "../../components/PostCard.astro";

export const getStaticPaths = async () => {
  const allPosts = await getCollection("blogs");
  const filteredPosts = [...allPosts]
    .filter((x) => x.data.draft === false)
    .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

  const allAuthors = [
    ...new Set(filteredPosts.map((post) => post.data.author).flat()),
  ];

  return allAuthors.map((author) => {
    const authorPosts = filteredPosts.filter(
      (post) => post.data.author === author,
    );
    return {
      params: { author: slugify(author) },
      props: {
        authorName: author,
        posts: authorPosts,
      },
    };
  });
};

interface Props {
  authorName: string;
  posts: CollectionEntry<"blogs">[];
}

const { authorName, posts } = Astro.props as Props;
---

<MainLayout title={authorName}>
  <section class="container" aria-label={`Posts about ${authorName}`}>
    <h1 class="h1">Posts by <span>{authorName}</span></h1>
    <div class="post-container">
      {posts.map((post) => <PostCard {post} heading="h2" />)}
    </div>
  </section>
</MainLayout>
